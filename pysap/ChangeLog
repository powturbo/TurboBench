2015-10-29 Martin Gallo <mgallo@coresecurity.com>

	* - Version v0.1.8 released.
	* - Enabled travis containers for more quick builds.
	* - Minor documentation and README improvements.
	* pysap/SAPRouter.py: Documented some version numbers from old releases.
	* pysapcompress/vpa108csulzh.cpp: Improved the fix for CVE-2015-2278 by
	properly initializing arrays (thanks 'ret5ret').
	* examples/diag_render_login_screen.py: Fail gracefully if wx is not found.
	* examples/router_password_check.py: Updating the fau_timer library in
	use and failing gracefully if it's not found.
	* examples/router_fingerprint.py: New example script for performing
	fingerprint over SAP Router versions. This is experimental and the database
	included only contains a few SAP Router versions, but it might work.

2015-05-13 Martin Gallo <mgallo@coresecurity.com>

	* - Version v0.1.7 released.
	* - Fixed vulnerabilities in LZC and LZH compression libraries
	(CVE-2015-2282 and CVE-2015-2278). Added test cases for checking proper
	fixes.
	* pysap/SAPRouter.py: Moved SAP Router native proxy implementation to
	the SAP Router module so it can be reused.
	* examples/router_portfw.py: Using the native proxy implementation in
	SAP Router module.

2015-03-25 Martin Gallo <mgallo@coresecurity.com>

	* - Version v0.1.6 released.
	* - Requirements now handled by setuptools.
	* - Test building with clang on travis.
	* - Cleared installation docs.
	* pysap/SAPNI.py: Made clients an instance variable in SAPNIServer.
	* pysap/SAPRouter.py: Added unknown field.
	* examples/diag_dos_exploit.py: Small fix.
	* examples/router_admin.py: Small fix on response handling.
	* examples/router_portfw.py: Added support for specify talk mode when
	requesting routes.
	* examples/router_scanner.py: Added support for specify talk mode when
	requesting routes.

2015-01-16 Martin Gallo <mgallo@coresecurity.com>

	* - Version v0.1.5 released.
	* - Updated to use scapy v2.3.1.
	* - Code is more Python3-friendly.
	* - Added travis script for running tests.
	* - General minor fixes and code improvements.
	* - Added test suites for SAPNI, SAPDiag and SAPRouter modules.
	* - Added support for routing via SAP Router in almost all example scripts.
	* pysap/SAPDiag.py: Added support for message info and Diag error packets.
	* pysap/SAPDiag.py: Diag item lookup now support looking up multiple items,
	and string lookups.
	* pysap/SAPDiagClient.py: Added support for specifying support bits when
	connecting, support for routing via SAP Router.
	* pysap/SAPDiagClient.py: If no terminal is supplied, use a random looking
	IP by default to avoid identification (SAP Note 1497445).
	* pysap/SAPDiagItems.py: Fixes on some atom items for old versions.
	* pysap/SAPEnqueue.py: Added trace max file size field.
	* pysap/SAPNI.py: Added helpers for creating new connections.
	* pysap/SAPNI.py: SAPNIProxy implemented using a Worker thread.
	* pysap/SAPNI.py: SAPNIServer implemented using SAPNIStreamSocket.
	* pysap/SAPRouter.py: Added route hop conversion helpers.
	* pysap/SAPRouter.py: Added info client and info server packets.
	* pysap/SAPRouter.py: Added SAPRoutedStreamSocket.
	* pysap/utils.py: Reimplemented MutablePacketField with evaluators.
	* pysapcompress/pysapcompress.cpp: Improved routines and added handling of
	some error conditions.
	* examples/diag_capturer.py: New example script for dumping Diag login
	credentials by sniffing or reading a pcap file.
	* examples/enqueue_monitor.py: Added command for get replication info and
	command for checking trace pattern endless loop vulnerability
	(CVE-2014-0995).
	* examples/router_admin.py: Parsing of info request responses.
	* examples/router_password_check: New example script for testing if a
	SAP Router is vulnerable to a timing attack on the password check
	(CVE-2014-0984).
	* requirements-optional.txt: Added optional requirements.

2014-03-25 Martin Gallo <mgallo@coresecurity.com>

	* - Version v0.1.4 released at Troopers'14.
	* - Changelog now in GNU format.
	* - Changed setup from distutils to setuptools.
	* - Added some unit tests.
	* - Arranged most of the code according to PEP8. 
	* pysap/SAPDiagItems.py: Fixed some support bits and added new ones found
	on SAP GUI version 7.30.
	* pysap/SAPDiagItems.py: Added new Diag Items: WindowsSize.
	* pysap/SAPEnqueue.py: New packet classes. Crafting of Enqueue Server
	packets: Connection Admin and Server Admin.
	* pysap/SAPNI.py: Fixed handling of NI_PING keep-alive requests.
	* pysap/SAPNI.py: Added logging namespace 'sapni' for all NI layer
	activity.
	* pysap/SAPMS.py: New packet classes. Crafting of Message Server packets.
	* pysap/SAPRouter.py: New packet classes. Crafting of SAP Router packets:
	Route, Admin, Control and Error Information.
	* pysap/SAPSNC.py: New packet class. Container for SNC Frame packets.
	* pysapcompress/pysapcompress.cpp: Splitted exception class in two:
	CompressError and DecompressError.
	* examples/ms_change_param.py: Added example for retrieving or changing a 
	parameter value using MS Admin set_param commands.
	* examples/ms_dump_info.py: New example script for retrieving information
	using MS Admin dump commands. 
	* examples/ms_impersonator.py: New example script for impersonating an
	application server connected to a Message Server service instance.
	* examples/ms_listener.py: New example script for connecting to a Message
	Server and listening for messages coming from the server.
	* examples/ms_messager.py: New example script for sending a message to a
	connected client throught the Message Server.
	* examples/ms_monitor.py: New example script for monitoring the Message
	Server service (msmon tool on steroids).
	* examples/ms_observer.py: New example script for connecting to a Message
	Server service and observe clients connecting to it (msprot tool).
	* examples/router_admin.py: New example script for performing
	administrative tasks on a SAP Route. Includes undocumented commands.
	* examples/router_portfw.py: New example script for routing native
	connections through SAP Router. 
	* examples/router_scanner.py: New example script for scanning internal
	hosts using SAP Router.

2013-08-28  Martin Gallo  <mgallo@coresecurity.com>

	* - Version v0.1.3 released.
	* - Added general documentation and setup.py command to build it using
	epydoc.
	* pysap/SAPNI.py: Refactored the SAP Diag Proxy and Server modules to a
	base NI	implementation.
	* pysapcompress/pysapcompress.cpp: Added handling of error return codes.
	* examples/diag_interceptor.py: Refactored to use the new NIProxy
	implementation. Fixed some hanging issues. Thanks Florian Grunow for the
	feedbackm!
	* examples/diag_login_brute_force.py: Handling of license errors.

2012-09-27  Martin Gallo  <mgallo@coresecurity.com>

	* - Version v0.1.2 released at Brucon'12.
	* pysap/SAPNI.py, pysap/SAPDiag.py: Network Interface packet class moved to
	a new module. Binding of the SAPNI/protocol layer is performed now by each
	script to allow the use of different protocols with SAPNI.
	* pysap/SAPNI.py: Added a NI Stream Socket class for using it instead of
	the	base Stream Socket.
	* pysap/SAPDiagItems.py: Added new Diag Atom types, as used in NW 7.01 and
	early versions.
	* examples/diag_rogue_server.py: Minor fixes.
	* examples/diag_render_login_screen.py: Minor fixes.
	* examples/diag_login_brute_force.py: Added multi-thread support.

2012-07-29  Martin Gallo  <mgallo@coresecurity.com>

	* - Initial version v0.1.1 releaseed at Defcon 20.
